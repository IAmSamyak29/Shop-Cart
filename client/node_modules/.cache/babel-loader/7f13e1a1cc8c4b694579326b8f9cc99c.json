{"ast":null,"code":"var _jsxFileName = \"/home/samyak/Desktop/Web Dev/Coding/Projects/Ecommerce/client/src/components/mainpages/createProduct/CreateProduct.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useContext } from 'react'\n// import axios from 'axios';\n// import { GlobalState } from '../../../GlobalState';\n// import Loading from '../utils/loading/Loading';\n// const initialState = {\n//     product_id: '',\n//     title: '',\n//     price: 0,\n//     description: 'This is my description did u like it',\n//     content: 'Welcome to my content in the laptop',\n//     category:''\n// }\n// function CreateProduct() {\n//     const state = useContext(GlobalState);\n//     const [product, setProduct] = useState(initialState);\n//     const [categories] = state.categoriesAPI.categories;\n//     const [images, setImages] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const [isAdmin] = state.userAPI.isAdmin;\n//   const [token] = state.token;\n//   const handleUpload = async e => {\n//     e.preventDefault();\n//     try {\n//       if (!isAdmin) return alert(\"You are not an admin\");\n//       const file = e.target.files[0];\n//       if (!file) return alert(\"File not exist.\");\n//       if (file.size() > 1024 * 1024) //1mb\n//         return alert(\"Size too large!\");\n//       if (file.type !== 'image/jpeg' && file.type !== 'image/png')\n//         return alert(\"File format is incorrect\");\n//       let formData = new FormData();\n//       formData.append('file', file);\n//       setLoading(true);\n//       const res = await axios.post('api/upload', formData, {\n//         headers:{'content-type':'multipart/form-data',Authorization:token}\n//       });\n//       setLoading(false);\n//       setImages(res.data);\n//     } catch (error) {\n//       alert(error.response.data.msg);\n//     }\n//   }\n//   const handleDestory = async () => {\n//     try {\n//       if (!isAdmin) return alert(\"You are not an admin\");\n//       setLoading(true);\n//       await axios.post('/api/destroy', { public_id: images.public_id }, {\n//         headers:{Authorization:token}\n//       })\n//       setLoading(false);\n//       setImages(false);\n//     } catch (error) {\n//       alert(error.response.data.msg);\n//   }\n//   }\n//   const handleChangeInput = e => {\n//     const { name, value } = e.target;\n//     setProduct({...product,[name]:value})\n//   }\n//   const styleUpload = {\n//     display: images ? \"block\" : \"none\",\n//   };\n//   return (\n//     <div className=\"create_product\">\n//       <div className=\"upload\">\n//         <input\n//           type=\"file\"\n//           name=\"file\"\n//           id=\"file_up\"\n//           onChange={handleUpload}\n//         ></input>\n//         {loading ? (\n//           <div id=\"file_img\">\n//             <Loading />\n//           </div>\n//         ) : (\n//           <div id=\"file_img\" style={styleUpload}>\n//             <img src={images ? images.url : \"\"} alt=\"\" />\n//             <span onClick={handleDestory}>X</span>\n//           </div>\n//         )}\n//       </div>\n//       <form>\n//         <div className=\"row\">\n//           <label htmlFor=\"product_id\">Product ID</label>\n//           <input\n//             type=\"text\"\n//             name=\"product_id\"\n//             id=\"product_id\"\n//             required\n//             value={product.product_id}\n//             onChange={handleChangeInput}\n//           ></input>\n//         </div>\n//         <div className=\"row\">\n//           <label htmlFor=\"title\">Title</label>\n//           <input\n//             type=\"text\"\n//             name=\"title\"\n//             id=\"title\"\n//             required\n//             value={product.title}\n//             onChange={handleChangeInput}\n//           ></input>\n//         </div>\n//         <div className=\"row\">\n//           <label htmlFor=\"price\">Price</label>\n//           <input\n//             type=\"text\"\n//             name=\"price\"\n//             id=\"price\"\n//             required\n//             value={product.price}\n//             onChange={handleChangeInput}\n//           ></input>\n//         </div>\n//         <div className=\"row\">\n//           <label htmlFor=\"description\">Description</label>\n//           <textarea\n//             type=\"text\"\n//             name=\"description\"\n//             id=\"description\"\n//             required\n//             value={product.description}\n//             onChange={handleChangeInput}\n//             rows=\"5\"\n//           />\n//         </div>\n//         <div className=\"row\">\n//           <label htmlFor=\"content\">Content</label>\n//           <textarea\n//             type=\"text\"\n//             name=\"content\"\n//             id=\"content\"\n//             required\n//             value={product.content}\n//             onChange={handleChangeInput}\n//             row=\"7\"\n//           />\n//         </div>\n//         <div className=\"row\">\n//           <label htmlFor=\"categories\">Categories: </label>\n//           <select\n//             name=\"category\"\n//             value={product.category}\n//             onChange={handleChangeInput}\n//           >\n//             <option>Please Select a category</option>\n//             {categories.map((category) => (\n//               <option value={category._id} key={category._id}>\n//                 {category.name}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n//         <button type=\"submit\">Create</button>\n//       </form>\n//     </div>\n//   );\n// }\n// export default CreateProduct\nimport React, { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { GlobalState } from \"../../../GlobalState\";\nimport Loading from \"../utils/loading/Loading\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  product_id: \"\",\n  title: \"\",\n  price: 0,\n  description: \"How to and tutorial videos of cool CSS effect, Web Design ideas,JavaScript libraries, Node.\",\n  content: \"Welcome to our channel Dev AT. Here you can learn web designing, UI/UX designing, html css tutorials, css animations and css effects, javascript and jquery tutorials and related so on.\",\n  category: \"\",\n  _id: \"\"\n};\n\nfunction CreateProduct() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [product, setProduct] = useState(initialState);\n  const [categories] = state.categoriesAPI.categories;\n  const [images, setImages] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [isAdmin] = state.userAPI.isAdmin;\n  const [token] = state.token;\n  const navigate = useNavigate();\n  const param = useParams();\n  const [products] = state.productsAPI.products;\n  const [onEdit, setOnEdit] = useState(false);\n  const [callback, setCallback] = state.productsAPI.callback;\n  useEffect(() => {\n    if (param.id) {\n      setOnEdit(true);\n      products.forEach(product => {\n        if (product._id === param.id) {\n          setProduct(product);\n          setImages(product.images);\n        }\n      });\n    } else {\n      setOnEdit(false);\n      setProduct(initialState);\n      setImages(false);\n    }\n  }, [param.id, products]);\n\n  const handleUpload = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      const file = e.target.files[0];\n      if (!file) return alert(\"File not exist.\");\n      if (file.size > 1024 * 1024) // 1mb\n        return alert(\"Size too large!\");\n      if (file.type !== \"image/jpeg\" && file.type !== \"image/png\") // 1mb\n        return alert(\"File format is incorrect.\");\n      let formData = new FormData();\n      formData.append(\"file\", file);\n      setLoading(true);\n      const res = await axios.post(\"/api/upload\", formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setImages(res.data);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const handleDestroy = async () => {\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      setLoading(true);\n      await axios.post(\"/api/destroy\", {\n        public_id: images.public_id\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setImages(false);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProduct({ ...product,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      if (!images) return alert(\"No Image Upload\");\n\n      if (onEdit) {\n        await axios.put(`/api/products/${product._id}`, { ...product,\n          images\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n      } else {\n        await axios.post(\"/api/products\", { ...product,\n          images\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n      }\n\n      setCallback(!callback);\n      navigate(\"/\");\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const styleUpload = {\n    display: images ? \"block\" : \"none\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_product\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"file_up\",\n        onChange: handleUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"file_img\",\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"file_img\",\n        style: styleUpload,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: images ? images.url : \"\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: handleDestroy,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"product_id\",\n          children: \"Product ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"product_id\",\n          id: \"product_id\",\n          required: true,\n          value: product.product_id,\n          onChange: handleChangeInput,\n          disabled: onEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          id: \"title\",\n          required: true,\n          value: product.title,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"price\",\n          id: \"price\",\n          required: true,\n          value: product.price,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"description\",\n          id: \"description\",\n          required: true,\n          value: product.description,\n          rows: \"5\",\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"content\",\n          id: \"content\",\n          required: true,\n          value: product.content,\n          rows: \"7\",\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"categories\",\n          children: \"Categories: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"category\",\n          value: product.category,\n          onChange: handleChangeInput,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Please select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category._id,\n            children: category.name\n          }, category._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: onEdit ? \"Update\" : \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateProduct, \"U+jnN7a6163ympfethnmtOCevZw=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = CreateProduct;\nexport default CreateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"sources":["/home/samyak/Desktop/Web Dev/Coding/Projects/Ecommerce/client/src/components/mainpages/createProduct/CreateProduct.js"],"names":["React","useState","useContext","useEffect","axios","GlobalState","Loading","useNavigate","useParams","initialState","product_id","title","price","description","content","category","_id","CreateProduct","state","product","setProduct","categories","categoriesAPI","images","setImages","loading","setLoading","isAdmin","userAPI","token","navigate","param","products","productsAPI","onEdit","setOnEdit","callback","setCallback","id","forEach","handleUpload","e","preventDefault","alert","file","target","files","size","type","formData","FormData","append","res","post","headers","Authorization","data","err","response","msg","handleDestroy","public_id","handleChangeInput","name","value","handleSubmit","put","styleUpload","display","url","map"],"mappings":";;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,KAAK,EAAE,CAHY;AAInBC,EAAAA,WAAW,EACT,6FALiB;AAMnBC,EAAAA,OAAO,EACL,0LAPiB;AAQnBC,EAAAA,QAAQ,EAAE,EARS;AAS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","sourcesContent":["// import React, { useState, useContext } from 'react'\n// import axios from 'axios';\n// import { GlobalState } from '../../../GlobalState';\n// import Loading from '../utils/loading/Loading';\n\n// const initialState = {\n//     product_id: '',\n//     title: '',\n//     price: 0,\n//     description: 'This is my description did u like it',\n//     content: 'Welcome to my content in the laptop',\n//     category:''\n// }\n\n// function CreateProduct() {\n//     const state = useContext(GlobalState);\n//     const [product, setProduct] = useState(initialState);\n//     const [categories] = state.categoriesAPI.categories;\n//     const [images, setImages] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const [isAdmin] = state.userAPI.isAdmin;\n//   const [token] = state.token;\n  \n\n//   const handleUpload = async e => {\n//     e.preventDefault();\n//     try {\n//       if (!isAdmin) return alert(\"You are not an admin\");\n//       const file = e.target.files[0];\n\n//       if (!file) return alert(\"File not exist.\");\n\n//       if (file.size() > 1024 * 1024) //1mb\n//         return alert(\"Size too large!\");\n      \n//       if (file.type !== 'image/jpeg' && file.type !== 'image/png')\n//         return alert(\"File format is incorrect\");\n      \n//       let formData = new FormData();\n//       formData.append('file', file);\n\n//       setLoading(true);\n//       const res = await axios.post('api/upload', formData, {\n//         headers:{'content-type':'multipart/form-data',Authorization:token}\n//       });\n\n//       setLoading(false);\n//       setImages(res.data);\n        \n//     } catch (error) {\n//       alert(error.response.data.msg);\n//     }\n//   }\n\n//   const handleDestory = async () => {\n//     try {\n//       if (!isAdmin) return alert(\"You are not an admin\");\n//       setLoading(true);\n//       await axios.post('/api/destroy', { public_id: images.public_id }, {\n//         headers:{Authorization:token}\n//       })\n//       setLoading(false);\n//       setImages(false);\n//     } catch (error) {\n//       alert(error.response.data.msg);\n//   }\n//   }\n\n//   const handleChangeInput = e => {\n//     const { name, value } = e.target;\n\n//     setProduct({...product,[name]:value})\n//   }\n  \n//   const styleUpload = {\n//     display: images ? \"block\" : \"none\",\n//   };\n\n\n\n    \n\n//   return (\n//     <div className=\"create_product\">\n//       <div className=\"upload\">\n//         <input\n//           type=\"file\"\n//           name=\"file\"\n//           id=\"file_up\"\n//           onChange={handleUpload}\n//         ></input>\n//         {loading ? (\n//           <div id=\"file_img\">\n//             <Loading />\n//           </div>\n//         ) : (\n//           <div id=\"file_img\" style={styleUpload}>\n//             <img src={images ? images.url : \"\"} alt=\"\" />\n//             <span onClick={handleDestory}>X</span>\n//           </div>\n//         )}\n//       </div>\n\n//       <form>\n//         <div className=\"row\">\n//           <label htmlFor=\"product_id\">Product ID</label>\n//           <input\n//             type=\"text\"\n//             name=\"product_id\"\n//             id=\"product_id\"\n//             required\n//             value={product.product_id}\n//             onChange={handleChangeInput}\n//           ></input>\n//         </div>\n\n//         <div className=\"row\">\n//           <label htmlFor=\"title\">Title</label>\n//           <input\n//             type=\"text\"\n//             name=\"title\"\n//             id=\"title\"\n//             required\n//             value={product.title}\n//             onChange={handleChangeInput}\n//           ></input>\n//         </div>\n\n//         <div className=\"row\">\n//           <label htmlFor=\"price\">Price</label>\n//           <input\n//             type=\"text\"\n//             name=\"price\"\n//             id=\"price\"\n//             required\n//             value={product.price}\n//             onChange={handleChangeInput}\n//           ></input>\n//         </div>\n\n//         <div className=\"row\">\n//           <label htmlFor=\"description\">Description</label>\n//           <textarea\n//             type=\"text\"\n//             name=\"description\"\n//             id=\"description\"\n//             required\n//             value={product.description}\n//             onChange={handleChangeInput}\n//             rows=\"5\"\n//           />\n//         </div>\n\n//         <div className=\"row\">\n//           <label htmlFor=\"content\">Content</label>\n//           <textarea\n//             type=\"text\"\n//             name=\"content\"\n//             id=\"content\"\n//             required\n//             value={product.content}\n//             onChange={handleChangeInput}\n//             row=\"7\"\n//           />\n//         </div>\n\n//         <div className=\"row\">\n//           <label htmlFor=\"categories\">Categories: </label>\n//           <select\n//             name=\"category\"\n//             value={product.category}\n//             onChange={handleChangeInput}\n//           >\n//             <option>Please Select a category</option>\n//             {categories.map((category) => (\n//               <option value={category._id} key={category._id}>\n//                 {category.name}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n\n//         <button type=\"submit\">Create</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default CreateProduct\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { GlobalState } from \"../../../GlobalState\";\nimport Loading from \"../utils/loading/Loading\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst initialState = {\n  product_id: \"\",\n  title: \"\",\n  price: 0,\n  description:\n    \"How to and tutorial videos of cool CSS effect, Web Design ideas,JavaScript libraries, Node.\",\n  content:\n    \"Welcome to our channel Dev AT. Here you can learn web designing, UI/UX designing, html css tutorials, css animations and css effects, javascript and jquery tutorials and related so on.\",\n  category: \"\",\n  _id: \"\",\n};\n\nfunction CreateProduct() {\n  const state = useContext(GlobalState);\n  const [product, setProduct] = useState(initialState);\n  const [categories] = state.categoriesAPI.categories;\n  const [images, setImages] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const [isAdmin] = state.userAPI.isAdmin;\n  const [token] = state.token;\n\n  const navigate = useNavigate();\n  const param = useParams();\n\n  const [products] = state.productsAPI.products;\n  const [onEdit, setOnEdit] = useState(false);\n  const [callback, setCallback] = state.productsAPI.callback;\n\n  useEffect(() => {\n    if (param.id) {\n      setOnEdit(true);\n      products.forEach((product) => {\n        if (product._id === param.id) {\n          setProduct(product);\n          setImages(product.images);\n        }\n      });\n    } else {\n      setOnEdit(false);\n      setProduct(initialState);\n      setImages(false);\n    }\n  }, [param.id, products]);\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      const file = e.target.files[0];\n\n      if (!file) return alert(\"File not exist.\");\n\n      if (file.size > 1024 * 1024)\n        // 1mb\n        return alert(\"Size too large!\");\n\n      if (file.type !== \"image/jpeg\" && file.type !== \"image/png\")\n        // 1mb\n        return alert(\"File format is incorrect.\");\n\n      let formData = new FormData();\n      formData.append(\"file\", file);\n\n      setLoading(true);\n      const res = await axios.post(\"/api/upload\", formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          Authorization: token,\n        },\n      });\n      setLoading(false);\n      setImages(res.data);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const handleDestroy = async () => {\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      setLoading(true);\n      await axios.post(\n        \"/api/destroy\",\n        { public_id: images.public_id },\n        {\n          headers: { Authorization: token },\n        }\n      );\n      setLoading(false);\n      setImages(false);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const handleChangeInput = (e) => {\n    const { name, value } = e.target;\n    setProduct({ ...product, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      if (!images) return alert(\"No Image Upload\");\n\n      if (onEdit) {\n        await axios.put(\n          `/api/products/${product._id}`,\n          { ...product, images },\n          {\n            headers: { Authorization: token },\n          }\n        );\n      } else {\n        await axios.post(\n          \"/api/products\",\n          { ...product, images },\n          {\n            headers: { Authorization: token },\n          }\n        );\n      }\n      setCallback(!callback);\n      navigate(\"/\");\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const styleUpload = {\n    display: images ? \"block\" : \"none\",\n  };\n  return (\n    <div className=\"create_product\">\n      <div className=\"upload\">\n        <input type=\"file\" name=\"file\" id=\"file_up\" onChange={handleUpload} />\n        {loading ? (\n          <div id=\"file_img\">\n            <Loading />\n          </div>\n        ) : (\n          <div id=\"file_img\" style={styleUpload}>\n            <img src={images ? images.url : \"\"} alt=\"\" />\n            <span onClick={handleDestroy}>X</span>\n          </div>\n        )}\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"row\">\n          <label htmlFor=\"product_id\">Product ID</label>\n          <input\n            type=\"text\"\n            name=\"product_id\"\n            id=\"product_id\"\n            required\n            value={product.product_id}\n            onChange={handleChangeInput}\n            disabled={onEdit}\n          />\n        </div>\n\n        <div className=\"row\">\n          <label htmlFor=\"title\">Title</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            required\n            value={product.title}\n            onChange={handleChangeInput}\n          />\n        </div>\n\n        <div className=\"row\">\n          <label htmlFor=\"price\">Price</label>\n          <input\n            type=\"number\"\n            name=\"price\"\n            id=\"price\"\n            required\n            value={product.price}\n            onChange={handleChangeInput}\n          />\n        </div>\n\n        <div className=\"row\">\n          <label htmlFor=\"description\">Description</label>\n          <textarea\n            type=\"text\"\n            name=\"description\"\n            id=\"description\"\n            required\n            value={product.description}\n            rows=\"5\"\n            onChange={handleChangeInput}\n          />\n        </div>\n\n        <div className=\"row\">\n          <label htmlFor=\"content\">Content</label>\n          <textarea\n            type=\"text\"\n            name=\"content\"\n            id=\"content\"\n            required\n            value={product.content}\n            rows=\"7\"\n            onChange={handleChangeInput}\n          />\n        </div>\n\n        <div className=\"row\">\n          <label htmlFor=\"categories\">Categories: </label>\n          <select\n            name=\"category\"\n            value={product.category}\n            onChange={handleChangeInput}\n          >\n            <option value=\"\">Please select a category</option>\n            {categories.map((category) => (\n              <option value={category._id} key={category._id}>\n                {category.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <button type=\"submit\">{onEdit ? \"Update\" : \"Create\"}</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateProduct;"]},"metadata":{},"sourceType":"module"}