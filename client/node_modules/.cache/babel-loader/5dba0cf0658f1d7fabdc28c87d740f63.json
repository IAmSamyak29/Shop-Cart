{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n        } catch (error) {\n          alert(error.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Please Login to cintinue buying\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n    if (check) setCart([...cart, { ...product,\n      quantity: 1\n    }]);else {\n      alert(\"This product has been added to cart\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    addCart: addCart\n  };\n}\n\n_s(UserAPI, \"bRWEenHGuj23AV38AmLORPHuZ9g=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["/home/samyak/Desktop/Web Dev/Coding/Projects/Ecommerce/client/src/api/UserAPI.js"],"names":["React","useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","getUser","res","get","headers","Authorization","data","role","error","alert","response","msg","addCart","product","check","every","item","_id","quantity"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,KAAJ,EAAW;AACP,YAAMO,OAAO,GAAG,YAAY;AACxB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,aAAV,EAAyB;AACvCC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAEX;AAAjB;AAD8B,WAAzB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBT,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AAEH,SARD,CAQE,OAAOU,KAAP,EAAc;AACZC,UAAAA,KAAK,CAACD,KAAK,CAACE,QAAN,CAAeJ,IAAf,CAAoBK,GAArB,CAAL;AACH;AACJ,OAZD;;AAaAV,MAAAA,OAAO;AACV;AACJ,GAjBQ,EAiBN,CAACP,KAAD,CAjBM,CAAT;;AAmBA,QAAMkB,OAAO,GAAG,MAAOC,OAAP,IAAmB;AAC/B,QAAI,CAAClB,QAAL,EAAe,OAAOc,KAAK,CAAC,iCAAD,CAAZ;AAEf,UAAMK,KAAK,GAAGf,IAAI,CAACgB,KAAL,CAAWC,IAAI,IAAI;AAC7B,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACH,KAFa,CAAd;AAIA,QAAIH,KAAJ,EACId,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,EAAE,GAAGc,OAAL;AAAcK,MAAAA,QAAQ,EAAE;AAAxB,KAAV,CAAD,CAAP,CADJ,KAEK;AACDT,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;AACJ,GAZD;;AAcA,SAAO;AACHd,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFN;AAGHc,IAAAA,OAAO,EAACA;AAHL,GAAP;AAKH;;GA3CQnB,O;;KAAAA,O;AA6CT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n    const [isLogged, setIsLogged] = useState(false);\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [cart, setCart] = useState([]);\n\n    useEffect(() => { \n        if (token) {\n            const getUser = async () => {\n                try {\n                    const res = await axios.get('/user/infor', {\n                        headers: { Authorization: token }\n                    });\n\n                    setIsLogged(true);\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n\n                } catch (error) {\n                    alert(error.response.data.msg);\n                }\n            }\n            getUser();\n        }\n    }, [token]);\n\n    const addCart = async (product) => {\n        if (!isLogged) return alert(\"Please Login to cintinue buying\");\n\n        const check = cart.every(item => {\n            return item._id !== product._id;\n        })\n\n        if (check)\n            setCart([...cart, { ...product, quantity: 1 }]);\n        else {\n            alert(\"This product has been added to cart\");\n        }\n    }\n\n    return {\n        isLogged: [isLogged, setIsLogged],\n        isAdmin: [isAdmin, setIsAdmin],\n        addCart:addCart\n  }\n}\n\nexport default UserAPI"]},"metadata":{},"sourceType":"module"}